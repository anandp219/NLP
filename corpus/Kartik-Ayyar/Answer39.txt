 The short version is that purely technical interviews sometimes miss important details about the overall package that a person is.I've encountered my share of very technically sharp people I've seen who aren't team players or aren't motivated. They can do very well in pure programming interviews but may not end up being superstars on the job. You can also have engineers who have approaches that are great complements to what you are doing, or just don't align with a teams philosophy.At the same time, there are people who might come across as good or average in interviews, but end up becoming foundational pillars of teams they work on by getting things done, being extremely productive, leading and being role models for others.Often this leads you to really learning more people skills, attitude and tenacity - which in addition to technical skills are absolutely vital for success in a team development environment.While coding and algorithmic questions are the bread and butter of my engineering interviews, I also budget a little bit of time to ask candidates open ended technical questions which often provide a much deeper insight into how candidates think, how they apply themselves, how they communicate and justify their decisions, what they are good at, how they approach teamwork, and so on.While I don't believe in or support purely behavioral interviews ( and personally tend to see it as a red flag because they tend to signal hiring for pure soft skills ), they are a logical extension of a similar train of thought, i.e. once you have a reading about someone as an engineer, you want to complement that with a reading of their soft skills.Finally, there is another reason that you might get a non technical interview: you've aced the technical interviews to the point your non technical interview really is a complete sell pitch.