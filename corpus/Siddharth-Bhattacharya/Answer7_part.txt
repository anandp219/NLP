 I currently work for Microsoft in Redmond. In the on-campus placements, I got placed at Epic Systems in Wisconsin (USA) and transitioned recently to MS. I have also interviewed onsite with Google, Facebook, Amazon and Yelp at their head-offices (and know many friends who work there). I can provide you an overview to the various questions you've asked-- about the package itself, short-listing criterion, interview process, interview preparation and a little bit on non-CS related careers which are equally lucrative. I can't claim authority on the question of "non premier institutes" although I have provided some second-hand information. If you don't want to prepare for coding interviews, feel free to skip the section pertaining to it. The Package DisclaimerThe news articles represented much inflated figures, as they include one-time payments like joining bonus, relocation bonus as well as stock options with 4-5 year vesting cycle and pass it off as annual package. The base annual salary for new hires is mostly uniform across companies at about ~$100,000. Sometimes backdoor negotiations with multiple offers can increase it slightly. However the taxes are much higher than India. In states like California, there is a state tax of ~ 9.5% (thankfully it's 0% in Washington) bumping the taxes to > $30,000 annually. Also cost-of-living is way higher. The post-tax annual salary is around Rs. 35 lakh (if directly converted) which is much lesser than dream figure of Rs 1 crore +. I'm not saying all this because I get lower (I don't) and therefore am trying to pull them down. I'm just trying to let people know to base comparisons against more realistic figures, and know what you're signing for. There are certain finance companies in India that offer amounts like that (Goldman Sachs, WorldQuant, Tower Research Capital) which pay almost that much in India so if earning a lot and saving is primary interest I'd recommend trying those options out. Read more on this here in this brilliant article by Antariksh Bothale.ShortlistingAnyways if you still want to know about these (high-tech) jobs irrespective of the disclaimer, read my answer to How do I get a H1B visa to immigrate from India to the Silicon Valley? It's a pretty enumerative list of how to get noticed by these big companies. For on-campus placements, the usual way of shortlisting is two-fold with filtering students based on GPA cutoff, and then conducting a coding exam. There are generally 2-3 coding questions requiring compilation, alongside few objective questions. Ones with best solutions (compiles quickly, no errors, few warnings, passes most test cases) make the interview. Outside of campus, as mentioned in other answer some ways to get noticed are HackerRank, Github contributions etc. The most common way is to get referred by a company insider (friend/ex-colleague). Have a good resume, with 1-2 internships at least, something noteworthy and there's a very good chance of hearing back from some member of their HR department. Frankly, I've had almost zero luck in posting my resume on careers@x.com,so I would be fooling anyone by recommending that. It might work, but isn't great for beginner levels. However I've to admit that I don't know more of the protocol from "non-premier institutes" although I've lots of peers who are from them, mostly via Master's route. Also maintaining a LinkedIn profile is good for this purpose.InterviewsExcept for on-campus application, you'll be subjected to phone interviews. There will be more of these if you're in India than in US already. The questions (and format) will almost resemble the later interviews. After 2 or more rounds, if they find your knowledge of CS concepts to be good enough they'll fly you to their onsite (although I've heard at times conducting interview in India offices). Here typically in a day there will be 4-5 interviews of 45 minutes each. With an initial introduction of some work you've done- a project with some questions like "what would you have done differently", "challenges" and suchlike the interviewer proceeds to do a "technical question". This is typically a question based on data structures/ algorithms and you're required to write code on the white-board while explaining what you're writing. Code needn't be syntactically perfect, but it's good to be as close as possible. You can find most of these questions online, and with enough practice (1-2 months) new questions won't be too challenging as well. However interviewers ask follow-up questions altering constraints, asking scalable solutions etc. If you have memorized solutions to questions, this is a likely avenue for getting stuck as these questions tend to depend on the direction the conversation