 took. Interviews are wrapped with typically 5 minutes remaining for "do you have any questions from us?". It may feel repetitive as the candidate to ask similar questions, but still ask. This will demonstrate genuine curiosity in the company, work-culture. In short, this is the part where you demonstrate not being desperate and one where you're asking them to sell the company to you. A non-snarky and non-desperate attitude goes a long way. How to PrepareIf you haven't already, read a complete DS/algorithms book. I'd read Data Structures and Algorithms in Java: Michael T. Goodrich, Roberto Tamassia during my college placements. If you can (not required necessarily), do try Introduction to Algorithms. This creates a firm base for trying out questions. Practice some of the common algorithms by writing code for them. Have a package for each of the common data structures in your local machine in any language of your choice (preferable if it is C/ C++ / C# /Java/ Python). Write working code for standard algorithms for each of these- for example, for binary trees, write working methods for tree traversal algorithms, try various inputs and see it works as expected. For linked lists, write code to reverse it; for graphs, traversal such as BFS, DFS as well as Djikstra's. Meanwhile, you can pick up the book Cracking the Coding Interview to see how you can reason through questions, and when you get stuck how the author drives the thought process underlining assumptions and method. I'd advice doing all 150 problems in the book multiple times, and by coding them rather than just thinking algorithm in head. In parallel, you can also start looking for other resources such as geeksforgeeks.com, Leetcode OJ. I didn't do much of the former, more of the latter as compiled code gives confidence. At this stage itself, you should be prepared. Apart from these, do read a little bit on threads/ processes/ networking/OS concepts. If you get a question on these, you can be frank and declare not knowing them in much detail. When you're confident of all this, do practice your resume. Although it's frowned upon to have a tailored answer to "tell me about yourself" it's better than not having practiced at all. Remember the question is a shorthand for "why should I hire you?". You shouldn't be telling the interviewer about your interests in football. Finally go through the answers from Gayle Laakmann McDowell on Quora.[1] She has multiple times laid emphasis on the perspective of the interviewer. Lots more answers here on the topic: What should I expect in a Software Engineer interview at Google and how should I prepare?Non-Coding CareersOne of my best friends worked in EXL as a Business Analyst. They moved him to NYC after 1.5 years. Then he switched jobs further (in banking), and makes similar sum of money as you posit. Many of the companies which come on-campus offer such opportunities, and give good compensation within India. However for Goldman Sachs, WorldQuant etc. I think it's very unlikely they consider candidates from non-premier institutes without high GPA and it helps to attempt MBA from IIMs if you don't meet the criterion. For consulting companies, the interview process is based a lot more on soft-skills. For analytics, it's based on puzzles (Tech Interview). Since I don't work for these, I'd advice seeking advice from someone else in these lines. But the bottomline is over a period of few years, these fields offer very lucrative careers. Especially within India, some of them are more lucrative compensation-wise than Google, Microsoft offers. Personal caseAs I can see people asking me anyhow on my specific case, I didn't have a major in CS, but Mathematics & Computing from IIT-Delhi. I didn't have a particularly high GPA (~ 7.5/10). During on-campus placements, I'd not read from so many sources. I just did well enough to get through Epic's coding exam and interview. When I began reapplying within US, I got interviews in Google, FB, Microsoft, Amazon via referrals from friends/ batchmates. I guess the best thing on my resume was an IEEE publication. I made it to onsite of all these companies + 3 more. Got offered a software developer position for MS Excel. Accepted it. Anyhow, the point is I am by no means coding in my sleep, nor have attempted any competitive programming ever. I'm as average as programmer can get. However I was pretty good on the mathematics side of things. Basically: if you can develop thinking process to reasonable level + learn how to code, it's manageable to get hired for these packages. Without an elite college, GitHub and Stack Overflow participation helps.[1] http://www.quora.com/Gayle-Laakmann-McDowell/answers/Career-Advice