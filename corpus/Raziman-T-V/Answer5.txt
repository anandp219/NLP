 Using the fact that K is very small (10), we can compute this efficiently using matrix exponentiation.Define [math]f(N,K)[/math] to be the the number of solutions of [math]1 x_1 + 2 x_2 \ldots K x_K = N[/math]. Let us first find the recurrence for [math]f(N,K)[/math].Let [math]i[/math] be the largest value such that [math]x_i > 0[/math] in a solution. The number of such solutions for given [math]i[/math] is just [math]f(N-i,i)[/math] since the remaining sum of [math]N-i[/math] has to be made out of terms [math]x_1 \ldots x_i[/math]. Summing this quantity over all values of [math]i[/math] gives the total number of solutions. That is, [math]f(N,K) = f(N-1,1) + f(N-2,2) \ldots f(N-K,K)[/math].Now, note that evaluating this recurrence naively would take [math]O(NK)[/math] operations, which is too much for the given constraints. So we will reduce the complexity by using matrix exponentiation.Define the vector [math]v(N) = [f(N,1) \ldots f(N,K) \ldots f(N+K-1,1) \ldots f(N+K-1,K)]^T[/math].[math]v(N+1)[/math] can be found from [math]v(N)[/math] by multiplying it by a recurrence matrix [math]M[/math]. The first [math]K(K-1)[/math] rows of [math]M[/math] would just shift elements of the vector up whereas the last [math]K[/math] rows would implement the recurrence found above.For example, when [math]K=2[/math], the matrix equation would look like this:[math]
v(N+1)
= \begin{bmatrix} f(N+1,1) \\ f(N+1,2) \\ f(N+2,1) \\ f(N+2,2) \end{bmatrix}

= \begin{bmatrix}
0 & 0 & 1 & 0 \\
0 & 0 & 0 & 1 \\
0 & 0 & 1 & 0 \\
0 & 1 & 1 & 0
\end{bmatrix}

\begin{bmatrix} f(N,1) \\ f(N,2) \\ f(N+1,1) \\ f(N+1,2) \end{bmatrix} 
= M v(N)
[/math]Since [math]v(N+1) = M v(N)[/math], we have [math]v(N+x) = M^x v(N)[/math]. If matrix multiplication is performed in [math]O(L^3)[/math] where [math]L[/math] is the size of the matrix, the matrix power can be found in [math]O(L^3 \log x)[/math] using exponentiation by squaring. Thus after finding the values of [math]f(N,K)[/math] for [math]N \leq K[/math] using the recurrence, matrix exponentiation can be used to find the solution in [math]O(K^6 \log N)[/math], which should be efficient enough for the problem.