 Computer Scientists try to group problems based on how "easy" it is to solve them by a computer. Since there are a large number of problems, to make things simple they have grouped them into several classes and analyze them. One of the classes of problems is called the "Polynomial" where the problems can be solved in an "easy" way. You just need computing power proportional to the input data. For instance, if I have to arrange a list of names in ascending order, I can use a sorting algorithm which would solve the problem without much trouble. If the number of names increase from 1 million to say 10 million, I just need to buy some extra hardware and things would go.There is another important class called the "Nondeterministic Polynomial" (NP) where it is easy to verify the solution, but hard to solve itself. Most of the interesting problems to mankind come under this class. Let's say you are trying to solve a problem for your mathematics class. Usually, the time taken taken to solve would be a lot more than the time taken to verify your proof at the end. In one extraordinary case, the Fermat's Last Theorem took 358 years for someone to solve, while it too substantially less for other to verify that the proof was correct. Chess is another example. It is easy to find whether there is checkmate or not in the present move, but hard to actually find a list of moves that would lead to a checkmate. In all these cases, solving the problem take a non-deterministic time, while verifying the proof just takes a polynomial time. The question really is can we solve these NP problems in polynomial time just like we can verify these problems in polynomial time? While many believe that there is no way to solve these problems in polynomial time, there is no way to prove it so far. P versus NP is thus a challenge to come with a mathematical proof to state either that the class of problems under NP can be solved under polynomial time or cannot be solved under polynomial time.If we were able to show P= NP, a whole new revolution could occur in computing where a number of important problems to mankind could be solved with deterministic algorithms instead of heuristics.