 No one expects a civil engineer to rotate the bridge he built, by 90 degrees just because the customer changed his mind. No one expects a mechanical engineer who just designed a refrigerator to now repurpose his device as a microwave oven. On the other hand, customers often expect outrageous changes in their software. While your refrigerator or your car or your home has not changed that drastically in the past 40 years, your software changes quite drastically. Changing to the new requirements that quick means engineers sometimes take shortcuts, quickfixes and hacks rather than reengineering them. As technologies change fast, software engineers also spend less time with the manual than other kinds of engineers. Powerful development environments (IDEs) have also reduced the need for going to the manual and this just-in-time learning hampers understanding the big picture. Finally, software engineering as a discipline has existed for a lot less time than other engineering disciplines. It takes time to make the discipline rigorous.