 First, a product is never finished, so get that idea right out of your head. What I see here is a lightweight MVP at best. When that is complete you'll need to start building the real product. There is a lot of hidden complexities not obvious in these mocks. For instance I see an RSS feed button. And there is some sort of notification thing going on. I didn't see UI for how that works. What triggers that, how are they viewed, how are they dismissed? Profiles?This is probably a minimum three month job for the front end. Rushed. Probably closer to six if you care about the code. And if you think you'll get a guy to do both front and backends, more than likely one set of skills will suffer, because either domain is large enough. And since you have a largely complete backend, that's also going to limit possible candidates. If you do find a single engineer that is equally proficient on both front and backends, that backend better be in the same technologies he's good with. The most likely scenario here is that you will find an engineer who is good with the backend technologies and thinks he can muddle through the frontend well enough. Don't do it. Frontend tech is hard. It is way too easy to get a tangled mess when a backend engineer tries to jump in and do it with little to no experience. Of course it goes the other way as well. Frontend engineers don't usually understand the complexities of building a scalable backend. So, you should get dedicated frontend and backend engineers. Of course, if you don't really care about the long term viability of the code, all this goes out the window. Just pay a highschool kid $1000 to rip it out in a weekend and then throw it away when done.