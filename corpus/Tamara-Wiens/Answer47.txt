 Operating systems, web servers and programming languages are all non-trivial products that usually requires thousands of design and development days of effort, followed by at least as many days worth of intensive testing with large user bases. And you say that you are doing this simply as support for your startup, which I assume is the "next Facebook" that you talk about in a different question.Each of these things can be STARTED with one person - Linux, for example, started with Linus Torvalds, but he quickly got it online and into community development, when he had a kernel that could do a small subset of what the OS as a whole required. I would suggest that you start with your social media platform, develop it with a language that will make it most easy to create, maintain and extend, deliver it with a standard web server, and make it run on the most common OSes on the market. When your startup takes off and has 10's or 100's of millions of users, and a steady stream of revenue, combined with a development team that can support and grow the platform without you, and then take on your infrastructure dreams. Or swap it around and do whatever you think will be fastest to market, cheapest to get there, and have the highest probability of generating the most income - the challenge will be that each of those will likely hit one or two of your criteria (all of which are subjective, by the way), not really leaving you with any good option to move forward with first.As for your original question, I would start with my own server, as you are very unlikely to need the capacity afforded by a hosted environment until you have at least 10's of users, or more. That gives you complete control, as you are likely to have lots of bugs, and crashes, not because you're bad at it, but because that's the reality of infrastructure like this, which is very new, is that it has lots of defects and unanticipated challenges to overcome.