I'd take it out.Given that you're using a StringBuffer  I don't see the benefit of concatenating a string first and then inserting the string. That will create a new string. I would just add the strings individually.Clean up time!First  I'll fix the style issues. I'm also going to put opening braces on the same line. This is my personal preference and the style that both Google and Facebook use. It's very much just personal preference; don't let anyone tell you it's bad to do otherwise. 1 2 3 4 5 6 7 8 9101112131415161718192021String compress(String input) { StringBuffer result = new StringBuffer(); for (int index = 0; index < input.length(); index++) { char curr = input.charAt(index); int frequency = 0; // keep incrementing frequency while the character is the same as the current one while (index < input.length() && input.charAt(index) == curr) { index++; frequency++; }  // decrement index so no character is missed index--;  result.append(curr); if (frequency > 1) { result.append(frequency); } } return result.toString();}Getting better already!Now  let's fix the correctness issues.