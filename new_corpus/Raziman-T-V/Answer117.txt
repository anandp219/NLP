We can take care of this by precomputing cost() before the best() recurrence evaluation [1].12345678cost(* *)=0for i=1 to N for j=i+1 to N for k = i+1 to j-1 cost(i j)+=min(dist(i k) dist(j k)) end endendThus  both cost() and best() can be evaluated in O(N^3) which should be enough for the given constraints.Now what is the final answer? The last post office could be anywhere and the remaining villages have to be sent to it. We just choose the position which gives the minimum sum: 1 2 3 4 5 6 7 8 910ret=best(N K)for i=1 to N-1 cur=best(i K) for j=i+1 to N cur+=dist(i j) end ret=min(cur ret)endreturn ret[1] There are alternate ways to take care of this without precomputation.