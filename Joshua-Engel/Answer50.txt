 Joshua EngelHere's the problem: nobody cares.Much bullshit is spewed about P vs NP because of the magical thinking that there's a serious chance that P=NP. Because if it does, maybe some kind of sci-fi apocalypse happens: codes get broken, AI suddenly becomes easy, your USB port turns into a butter dispenser. Something like that.Except that it's not going to. There's zero reason to think that P might be equal to NP, and every reason to think it doesn't. It's difficult to prove, which in and of itself doesn't mean much of anything: just because it's hard doesn't mean it's important. The difficulty of proving it somehow caught the public's imagination (as opposed to zillions of other, more important theorems that languish for lack of attention), presumably because of the sci-fi magic.Until computers were real, there was no reason to explore computational complexity. It could have been done any time: mathematicians have a habit of working on abstractions that actually turn out to be the right abstraction for something else much later. In this case they didn't, for no particular reason except that they were working on other things that caught their attention instead.In the 1970s enough people were working on algorithms that work was done on better and worse ones. Patterns were noticed; computational complexity groups established. This one proved hard to separate conclusively, and it just so happened that it separates a set of important but difficult categories of problems. Everybody expects them to remain difficult; it's just that the proof hasn't been finished.If it weren't for the combination of magical thinking and aggravating difficulty of proving what seems to be a simple thing, it would still languish in obscurity. And in fact, aside from a few hobbyists, that's basically still all it does.