 Gayle Laakmann McDowellYes, it is in the works. It should be released June or July 2015. You can sign up to be notified (or just find out more details) at Cracking the Coding Interview, v6 | Coming SoonWhen I wrote the 5th edition about four years ago, I had a ton of interview experience but not as much coaching experience. Now, particularly through doing acquisition/acquihire coaching, I have a lot more. And, I have more experience with coaching the same people repeatedly. I have developed a bunch of new techniques and have been able to refine them by seeing what really works. This has motivated a lot of the changes.What's new?This is a huge expansion. You know that thing that many professors do, where they create a new "edition" that's not substantially different but forces you to buy a new version? I don't believe in doing that. This is actually a huge change (as was the 4th->5th edition).Some of the biggest changes:It's about 70% longer. The 5th edition was 500 pages. The 6th is (well, was) about 850. I actually hit the printing limit (800 pages), so I had to change the page size. (It's like college all over again...)It has 39 more problems. I took out a few problems I didn't really like, so there are probably more like 45 more problems.Hints! I'm really excited about this. I think this will be incredibly valuable. It will help you simulate the interview experience more and develop better techniques, since interviewers give you hints too. Each problem has an average of 5 or so hints (2 or 3 for some of the easiest problems), and more than 10 for some of the hardest. The hints for each problem are incremental. Try to solve the problems without the hints, but if you need them--use as few as possible. New strategies / techniques. I've done a lot of interview coaching over the past two or three years. There are a lot of trends and techniques that I see now that I never noticed before. They've even helped me to solve some of the harder problems. :)Lots of Big O. When I wrote the 5th edition, I don't think I realized how many people struggled with big O. Turns out... the vast majority of candidates don't understand it well enough for an interview (even those who think they do). I have a huge section on big O now. In addition, many of the existing problems have been reworked or rewritten - fixing errors in some cases, clarifying things, adding new solutions/approaches, etc.Programming LanguageI have continued to use Java for this book for a few reasons. First, Java is more widely readable than Python. Pretty much everyone has written Java or a language much like it. Second, while I love Python as a language because it makes some things so easy (for example, doing a quick map or reduce), that makes solutions in Python a little less broadly applicable. I want this book to be as language agnostic as possible. The point is the algorithms, not the code.Third, for the purposes of this book, having explicit typing makes it easier for people to understand what's going on. It removes some of the ambiguity when reading written code. However, you can view or contribute solutions in other languages at gaylemcd/ctci.