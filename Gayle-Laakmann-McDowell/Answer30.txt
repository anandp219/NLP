 Gayle Laakmann McDowellMaybe, maybe not.1. Is this a good question?I can't really comment on the problem as it's not clear what the problem means.Many people have interpreted the problem to mean flipping left and right. In this case, it's a pretty uninteresting trivial problem. It's a bad question, unless maybe early on in the process, because it doesn't really demonstrate much. It's easy. (And I would be somewhat concerned about someone who couldn't do it.)However, the OP later says that it was "to min-max a tree, ascending to descending". I don't really understand what this means. Max Howell on Twitter2. Was he rejected because of this question?It's also unclear why he was rejected. Was he specifically told that he was rejected because he couldn't invert a binary tree on the whiteboard? If he had multiple interviews (which is likely, since he was brought onsite), does he know that it was that interview that led to his rejection? If he did know it was that interview, how does he know why he was rejected? Usually recruiters don't provide that information.Perhaps it had nothing to do with his technical performance and was in fact his communication skills.In my experience, a candidate's assumptions about their performance has no correlation with their actual performance. He might have very strong beliefs about why he was rejected, but unless he was specifically told, I don't really put much faith in it.3. Why was he rejected?If it was his technical performance on this question that led to his rejection, it's still not quite true that he was rejected because he simply "can't invert a binary tree on a whiteboard."Interviews aren't graded on a binary basis. It's not like, "Oops, you can't do X, so I'm going to reject you."More accurately, if it was this interview question that led to his rejection, he was rejected because he performed worse on this question relative to other candidates. That is, other candidates who tackled the same problem with the same interviewer demonstrated stronger problem-solving/coding skills than he did. It's very much feasible to perform better than other candidates on this problem (whatever it is). He just didn't.4. Was he a false negative?Yes, the interview process is flawed. There are false positive (bad candidates who are accepted) and there are false negatives (good candidates who are rejected).Was he a false negative? We don't really know. Maybe. He's certainly done some excellent work, but that doesn't mean he would perform well in Google's environment. Just because you're great in one environment doesn't mean you'll perform well in all.5. Should you hire on past experience?You might argue that, despite poor performance (relative to other candidates), he should still be hired because of his prior experience. I'm somewhat sympathetic to that view, but it can also present a dangerous slippery slope. How widely do you start making exceptions because someone has great prior experience? How do you roll out such a policy at a large company without letting the bar slip to more marginal cases?It's worth noting that, in the vast majority of cases, you can't hire based on someone's prior experience. You can only hire based on how someone discusses it. It's hugely subjective and very coachable. In a "hire on prior experience" process:There are lots of false negatives because candidates don't know how to discuss their prior experience. There are lots of false positive because candidates are able to trump up (sometimes even lie) about what they've done in the past.There are lots of people who are brilliant and would do great work given the right opportunities and mentorship, but haven't gotten that opportunity yet. Google's process can identify those people. Many people don't classify those situations as a false negatives since those people haven't in fact accomplished much. I think that's a mistake. You care about what they'll do for you, not what they've done in the past.It's also circular logic, since it's saying that hiring based on prior experience justifies rejecting based on a lack of it. If so, then doesn't hiring based on whiteboard problem-solving skills justify rejecting based on lack of those?Hiring based on prior experience comes with its own set of issues (and its own advantages).6. Does it work for Google?As far as if it works for Google: well, let's look at it this way. Virtually every "elite" tech company (Google, Facebook, Microsoft, Amazon, Airbnb, Dropbox, Palantir, etc.) has built its team of software engineers through this process. Unless you're going to argue that a randomly selected group of programmers could have built systems like the ones at those companies, the interview process can't be that bad. Somehow, it's selecting reasonably good people, even if it rejects some good people and hires some bad ones (and even if there's a better way of doing it).This is not to say that Google's process is perfect. It's not. But all interview processes are broken in their own ways. The key is to find the one that's least broken for your company.Developer Interviews are Broken, and You Can't Fix It