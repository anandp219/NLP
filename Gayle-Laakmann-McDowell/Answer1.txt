 Gayle Laakmann McDowellNot particularly. I think it's good to discuss what good interview processes look like.However, I do think that many people's points are poorly thought out. (Then again, I think the same thing about pretty much any issue, so it hardly makes it worse here.)Many people's logic is: "Algorithm interviews are broken because of X, therefore we should all switch to Y instead." The problem is that Y is also broken in its own ways. All interview processes have their flaws. Developer Interviews are Broken, and You Can't Fix ItThe other key logical problem people make is the assumption that the interview process should mirror "real life." That's not actually true. The interview should assess relevant, important skills, but it doesn't need to be "real life." In other cases, many people just don't understand what the process is all about. They'll argue, for example, that it's ridiculous for an interviewer to expect you to write perfect code on a whiteboard. Well, yes, it is. But, generally speaking, a single bug does not lead to a rejection. (And if it does, then that company's implementation is very broken, but that doesn't mean that the process as a whole is broken.)I think many people's objections (or ultimate conclusions) are misinformed or just poorly thought through, but I'm not particularly tired of people making them. Or, at least, I'm less tired of them than I am of objections on many other issues.Now, people misspelling my name on the other hand... sigh.