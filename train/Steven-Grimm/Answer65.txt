In that case the server can begin doing other work right away  and you won't pay the cost of initializing the bean in question until it's actually needed.Lazy initialization comes with overhead such as the use of proxy objects that wouldn't otherwise be needed  so it shouldn't be used ubiquitously if you care at all about efficiency. But the cost will be spread out over time instead of all occurring before the server can do any work. Depending on your application  that may be the correct tradeoff to make.These principles are broadly applicable to lazy initialization as a general concept  not Spring in particular  though obviously the low-level details will differ.